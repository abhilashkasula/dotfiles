{
	// Place your snippets for clojure here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"defn": {
		"prefix": "defn",
		"body": [
			"(defn ${1:fn-name}",
			"\t\"${2:docstring}\"",
			"\t[${3:args}]",
			"\t(${4:body}))"
		],
		"description": "define a function"
	},
	"let": {
		"prefix": "let",
		"body": [
			"(let [${1:bindings}]",
			"\t(${2:form}))"
		],
		"description": "a let block"
	},
	"if": {
		"prefix": "if",
		"body": [
			"(if ${1:test} ${2:then} ${3:else?})"
		],
		"description": "if then else"
	},
	"cond": {
		"prefix": "cond",
		"body": [
			"(cond",
			"\t${1:test1} ${2:expr1}",
			"\t${3:test2} ${4:expr2}",
			"\t:else ${5:default})"
		],
		"description": "cond"
	}
}